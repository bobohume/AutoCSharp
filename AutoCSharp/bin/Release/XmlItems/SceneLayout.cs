//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace KLBase.Xml
{
    using System;
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    
    
    public class SceneLayout : IXmlValue
    {
        
        private uint _golbalID;
        
        private uint _version;
        
        private string _father;
        
        private string _fileName;
        
        private string _path;
        
        private uint _lightmapIndex;
        
        private float _lightmapScaleOffsetX;
        
        private float _lightmapScaleOffsetY;
        
        private float _lightmapScaleOffsetZ;
        
        private float _lightmapScaleOffsetW;
        
        private string _mainTexture;
        
        private float _positionX;
        
        private float _positionY;
        
        private float _positionZ;
        
        private float _rotationX;
        
        private float _rotationY;
        
        private float _rotationZ;
        
        private float _scaleX;
        
        private float _scaleY;
        
        private float _scaleZ;
        
        public uint golbalID
        {
            get
            {
                return this._golbalID;
            }
        }
        
        public uint version
        {
            get
            {
                return this._version;
            }
        }
        
        public string father
        {
            get
            {
                return this._father;
            }
        }
        
        public string fileName
        {
            get
            {
                return this._fileName;
            }
        }
        
        public string path
        {
            get
            {
                return this._path;
            }
        }
        
        public uint lightmapIndex
        {
            get
            {
                return this._lightmapIndex;
            }
        }
        
        public float lightmapScaleOffsetX
        {
            get
            {
                return this._lightmapScaleOffsetX;
            }
        }
        
        public float lightmapScaleOffsetY
        {
            get
            {
                return this._lightmapScaleOffsetY;
            }
        }
        
        public float lightmapScaleOffsetZ
        {
            get
            {
                return this._lightmapScaleOffsetZ;
            }
        }
        
        public float lightmapScaleOffsetW
        {
            get
            {
                return this._lightmapScaleOffsetW;
            }
        }
        
        public string mainTexture
        {
            get
            {
                return this._mainTexture;
            }
        }
        
        public float positionX
        {
            get
            {
                return this._positionX;
            }
        }
        
        public float positionY
        {
            get
            {
                return this._positionY;
            }
        }
        
        public float positionZ
        {
            get
            {
                return this._positionZ;
            }
        }
        
        public float rotationX
        {
            get
            {
                return this._rotationX;
            }
        }
        
        public float rotationY
        {
            get
            {
                return this._rotationY;
            }
        }
        
        public float rotationZ
        {
            get
            {
                return this._rotationZ;
            }
        }
        
        public float scaleX
        {
            get
            {
                return this._scaleX;
            }
        }
        
        public float scaleY
        {
            get
            {
                return this._scaleY;
            }
        }
        
        public float scaleZ
        {
            get
            {
                return this._scaleZ;
            }
        }
        
        public void SetValue(Dictionary<string, string> inArg0)
        {
            if (inArg0.ContainsKey("GolbalID"))
            {
                if (inArg0["GolbalID"] == "")
                {
                    this._golbalID = 0;
                }
                else
                {
                    this._golbalID = uint.Parse(inArg0["GolbalID"]);
                }
            }
            if (inArg0.ContainsKey("Version"))
            {
                if (inArg0["Version"] == "")
                {
                    this._version = 0;
                }
                else
                {
                    this._version = uint.Parse(inArg0["Version"]);
                }
            }
            if (inArg0.ContainsKey("Father"))
            {
                this._father = inArg0["Father"];
            }
            if (inArg0.ContainsKey("FileName"))
            {
                this._fileName = inArg0["FileName"];
            }
            if (inArg0.ContainsKey("Path"))
            {
                this._path = inArg0["Path"];
            }
            if (inArg0.ContainsKey("LightmapIndex"))
            {
                if (inArg0["LightmapIndex"] == "")
                {
                    this._lightmapIndex = 0;
                }
                else
                {
                    this._lightmapIndex = uint.Parse(inArg0["LightmapIndex"]);
                }
            }
            if (inArg0.ContainsKey("LightmapScaleOffsetX"))
            {
                if (inArg0["LightmapScaleOffsetX"] == "")
                {
                    this._lightmapScaleOffsetX = 0;
                }
                else
                {
                    this._lightmapScaleOffsetX = float.Parse(inArg0["LightmapScaleOffsetX"]);
                }
            }
            if (inArg0.ContainsKey("LightmapScaleOffsetY"))
            {
                if (inArg0["LightmapScaleOffsetY"] == "")
                {
                    this._lightmapScaleOffsetY = 0;
                }
                else
                {
                    this._lightmapScaleOffsetY = float.Parse(inArg0["LightmapScaleOffsetY"]);
                }
            }
            if (inArg0.ContainsKey("LightmapScaleOffsetZ"))
            {
                if (inArg0["LightmapScaleOffsetZ"] == "")
                {
                    this._lightmapScaleOffsetZ = 0;
                }
                else
                {
                    this._lightmapScaleOffsetZ = float.Parse(inArg0["LightmapScaleOffsetZ"]);
                }
            }
            if (inArg0.ContainsKey("LightmapScaleOffsetW"))
            {
                if (inArg0["LightmapScaleOffsetW"] == "")
                {
                    this._lightmapScaleOffsetW = 0;
                }
                else
                {
                    this._lightmapScaleOffsetW = float.Parse(inArg0["LightmapScaleOffsetW"]);
                }
            }
            if (inArg0.ContainsKey("MainTexture"))
            {
                this._mainTexture = inArg0["MainTexture"];
            }
            if (inArg0.ContainsKey("PositionX"))
            {
                if (inArg0["PositionX"] == "")
                {
                    this._positionX = 0;
                }
                else
                {
                    this._positionX = float.Parse(inArg0["PositionX"]);
                }
            }
            if (inArg0.ContainsKey("PositionY"))
            {
                if (inArg0["PositionY"] == "")
                {
                    this._positionY = 0;
                }
                else
                {
                    this._positionY = float.Parse(inArg0["PositionY"]);
                }
            }
            if (inArg0.ContainsKey("PositionZ"))
            {
                if (inArg0["PositionZ"] == "")
                {
                    this._positionZ = 0;
                }
                else
                {
                    this._positionZ = float.Parse(inArg0["PositionZ"]);
                }
            }
            if (inArg0.ContainsKey("RotationX"))
            {
                if (inArg0["RotationX"] == "")
                {
                    this._rotationX = 0;
                }
                else
                {
                    this._rotationX = float.Parse(inArg0["RotationX"]);
                }
            }
            if (inArg0.ContainsKey("RotationY"))
            {
                if (inArg0["RotationY"] == "")
                {
                    this._rotationY = 0;
                }
                else
                {
                    this._rotationY = float.Parse(inArg0["RotationY"]);
                }
            }
            if (inArg0.ContainsKey("RotationZ"))
            {
                if (inArg0["RotationZ"] == "")
                {
                    this._rotationZ = 0;
                }
                else
                {
                    this._rotationZ = float.Parse(inArg0["RotationZ"]);
                }
            }
            if (inArg0.ContainsKey("ScaleX"))
            {
                if (inArg0["ScaleX"] == "")
                {
                    this._scaleX = 0;
                }
                else
                {
                    this._scaleX = float.Parse(inArg0["ScaleX"]);
                }
            }
            if (inArg0.ContainsKey("ScaleY"))
            {
                if (inArg0["ScaleY"] == "")
                {
                    this._scaleY = 0;
                }
                else
                {
                    this._scaleY = float.Parse(inArg0["ScaleY"]);
                }
            }
            if (inArg0.ContainsKey("ScaleZ"))
            {
                if (inArg0["ScaleZ"] == "")
                {
                    this._scaleZ = 0;
                }
                else
                {
                    this._scaleZ = float.Parse(inArg0["ScaleZ"]);
                }
            }
        }
    }
}
